<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rmkj.microcap.modules.chanong.sub.dao.SubDao">
    <select id="getSubGoods"  resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubGoodsBean">
        SELECT
            goods.id,
            goods.img_load_path as imgLoadPath,
            goods.goods_name as goodsName,
            goods.goods_total_num as goodsTotalNum,
            goods.goods_left_num as goodsLeftNum,
            goods.sub_scale as subScale,
            goods.goods_sub_price as goodsSubPrice,
            goods.goods_cost as goodsCost,
            goods.sub_days as subDays,
            spec.sub_total_num as subTotalNum,
            spec.sub_make_num as subMakeNum,
            spec.sub_send_num as subSendNum,
            goods.goods_code as goodsCode
        FROM
            tb_sub_goods goods LEFT JOIN tb_sub_goods_spec spec ON goods.id = spec.goods_id
            LEFT JOIN tb_goods_type goodsType ON goodsType.id = goods.type_id
        WHERE
            goods.status = #{status}
            <if test='goodsTypeId != null and goodsTypeId != ""'>
                AND goodsType.id = #{goodsTypeId}
            </if>
    </select>

    <select id="getStoreGoodsList" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubGoodsBean">
          SELECT
                   goods.id,
                   goods.img_load_path as imgLoadPath,
                   goods.goods_name as goodsName,
                   goods.goods_total_num as goodsTotalNum,
                   goods.goods_left_num as goodsLeftNum,
                   goods.sub_scale as subScale,
                   goods.goods_sub_price as goodsSubPrice,
                   goods.goods_cost as goodsCost,
                   goods.sub_days as subDays,
                   spec.sub_total_num as subTotalNum,
                   spec.sub_make_num as subMakeNum,
                   spec.sub_send_num as subSendNum,
                   goods.goods_code as goodsCode
            FROM
                tb_goods_store store LEFT JOIN tb_sub_goods goods on store.goods_id = goods.id
                                     LEFT JOIN tb_sub_goods_spec spec ON goods.id = spec.goods_id
            WHERE
                store.user_id = #{0}
            ORDER BY
                store.create_time DESC
    </select>

    <update id="updGoodsSubLeftDays">
        update tb_sub_goods
           set sub_days = sub_days - 1
         where status = 1 and sub_days > 0
    </update>

    <update id="updGoodsStatus">
        update tb_sub_goods
           set status = '2'
         where status = 1 and sub_days = 0
    </update>

    <select id="getSubGoodsById" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.GoodsBean">
        SELECT
            goods.id,
            goods.img_load_path as imgLoadPath,
            goods.goods_name as goodsName,
            goods.goods_total_num as goodsTotalNum,
            goods.goods_left_num as goodsLeftNum,
            goods.sub_scale as subScale,
            IFNULL(goods.goods_sub_price, 0) as goodsSubPrice,
            IFNULL(goods.goods_cost, 0) as goodsCost,
            goods.user_id as userId,
            goods.status,
            goods.user_mobile as userMobile,
            goods.goods_code as goodsCode,
            up_and_down_percent as upAndDownPercent
        FROM
            tb_sub_goods goods
        WHERE id = #{0}
    </select>

    <select id="getScales" resultType="com.rmkj.microcap.modules.chanong.sub.bean.ScalesBean">
        SELECT
            sub_service_scale / 100 AS subServiceScale,
            sub_fee_scale / 100 AS subFeeScale,
            integral_return_scale / 100 AS integralReturnScale,
            percent_bubing as percentBuBing,
            percent_qibing as percentQiBing
        FROM
            tb_parameter_set
    </select>

    <insert id="subMake"  parameterType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        INSERT INTO tb_trade(
                     id,
                     serial_no,
                     user_id,
                     goods_id,
                     goods_name,
                     hold_num,
                     money,
                     service_fee,
                     fee_buy,
                     fee_sell,
                     buy_point,
                     buy_time,
                     status,
                     agent_id,
                     units_id,
                     center_id,
                     hold_flag,
                     <if test="sellPoint!=null">
                         sell_point,
                     </if>
                     <if test="oldTradeSerialNo!=null">
                         old_trade_serial_no,
                     </if>
                     <if test="hangTime!=null">
                         hang_time,
                     </if>
                     parent1_id,
                     parent2_id,
                     parent3_id
                     )
                 VALUES (
                     #{id},
                     #{serialNo},
                     #{userId},
                     #{goodsId},
                     #{goodsName},
                     #{holdNum},
                     #{money},
                     #{serviceFee},
                     #{feeBuy},
                     #{feeSell},
                     #{buyPoint},
                     now(),
                     #{status},
                     #{agentId},
                     #{unitsId},
                     #{centerId},
                     #{holdFlag},
                    <if test="sellPoint!=null">
                        #{sellPoint},
                    </if>
                    <if test="oldTradeSerialNo!=null">
                        #{oldTradeSerialNo},
                    </if>
                    <if test="hangTime!=null">
                        #{hangTime},
                    </if>
                    #{parent1Id},
                    #{parent2Id},
                    #{parent3Id}
                     )
    </insert>

    <update id="updGoodsSubLeftNum" parameterType="java.util.Map">
        UPDATE tb_sub_goods SET goods_left_num = goods_left_num - #{num} WHERE id = #{id}
    </update>

    <update id="updGoodsStatusById" parameterType="java.util.Map">
        UPDATE tb_sub_goods SET status = #{status} WHERE id = #{id}
    </update>

    <select id="getHangGoods" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        SELECT
          trade.id,
          trade.serial_no as serialNo,
          trade.user_id as userId,
          trade.hold_num as holdNum,
          trade.goods_id as goodsId,
          trade.goods_name as goodsName,
          u.chn_name as chnName,
          u.mobile,
          goods.img_load_path as imgLoadPath
        FROM
            tb_trade trade
        LEFT JOIN tb_sub_goods goods ON trade.goods_id = goods.id
        LEFT JOIN tb_user u on trade.user_id = u.id
        WHERE
            trade.status = 2
        AND goods.status = '2'
        <if test='_parameter != null and _parameter != ""'>
            AND trade.goods_id = #{0}
        </if>
        order by trade.goods_name,trade.hang_time desc

    </select>

    <update id="updUserSubFlag" parameterType="java.util.Map">
        UPDATE tb_user SET sub_flag = #{subFlag} WHERE id = #{id}
    </update>

    <select id="getSubTradeById" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        SELECT id,
               serial_no as serialNo,
               user_id as userId,
               hold_num as holdNum,
               money,
               goods_id as goodsId,
               buy_point as buyPoint
          FROM tb_trade
         WHERE id = #{0}
    </select>

    <update id="subSell" parameterType="java.util.Map">
        UPDATE tb_trade
        SET
            sell_time = #{sellTime},
            status = #{status},
            dif_money = #{difMoney},
            fee_sell = #{feeSell}
        WHERE id = #{id}
    </update>

    <update id="updUserIntegral" parameterType="java.util.Map">
        update tb_user
        <set>
            <if test="integral>=0">
                integral_neg = integral_neg + #{integral},
            </if>
            <if test="integral &lt; 0">
                integral_unpos = integral_unpos - #{integral},
            </if>
        </set>
        where id=#{id}
    </update>

    <select id="getDaysEndGoods" resultType="com.rmkj.microcap.modules.chanong.sub.bean.GoodsBean">
        SELECT id,
               img_path as imgPath,
               img_load_path as imgLoadPath,
               goods_name as goodsName,
               goods_total_num as goodsTotalNum,
               goods_left_num as goodsLeftNum,
               sub_scale as subScale,
               goods_sub_price as goodsSubPrice,
               goods_cost as goodsCost,
               user_id as userId,
               user_mobile as  userMobile,
               goods_code as goodsCode
         FROM  tb_sub_goods
         WHERE status = 1 and sub_days = 0
    </select>

    <update id="updUserHoldTrade" parameterType="java.util.Map">
        UPDATE tb_trade
           SET hold_num = #{leftNum}
           WHERE user_id = #{userId}
           AND goods_id = #{goodsId}
           AND status = 1
    </update>

    <select id="getUserIntegralList" resultType="com.rmkj.microcap.modules.user.entity.User">
        SELECT id,
               integral_unpos as integralUnpos,
               integral_pos as integralPos
          FROM tb_user
         WHERE integral_unpos > 0
    </select>

    <update id="updUserReturnIntegral" parameterType="com.rmkj.microcap.modules.user.entity.User">
        UPDATE tb_user
        SET integral_pos = #{integralPos},
            integral_unpos = #{integralUnpos}
        WHERE id = #{id}
    </update>
    
    <select id="getUserIntegral" parameterType="java.lang.String" resultType="java.math.BigDecimal">
        SELECT integral_neg FROM  tb_user WHERE id = #{0}
    </select>

    <insert id="addIntegral" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.IntegralBean">
        INSERT INTO tb_integral(id,user_id,type,integral,integral_before,integral_after,create_time,remark)
         VALUES (#{id},#{userId},#{type},#{integral},#{integralBefore},#{integralAfter},#{createTime},#{remark})
    </insert>

    <select id="getUserIntegralDetail" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.IntegralBean">
        SELECT  id,
                type,
                integral,
                integral_before as integralBefore,
                integral_after as integralAfter,
                create_time as createTime,
                remark
           FROM tb_integral
           WHERE user_id = #{0}
           ORDER BY create_time desc
    </select>

    <select id="getSubGoodsSpec" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubGoodsSpec">
        SELECT id,
               goods_id as goodsId,
               sub_total_num as subTotalNum,
               sub_make_num as subMakeNum,
               sub_send_num as subSendNum
         FROM tb_sub_goods_spec
         WHERE goods_id = #{0}
    </select>

    <update id="updUserReturnMoney" parameterType="java.util.ArrayList">
        <foreach separator=";" index="index" item="item" collection="list" close="" open="">
            UPDATE tb_user
               SET return_money = return_money + #{item.returnMoney},
                   return_money_total = return_money_total + #{item.returnMoney}
             WHERE id = #{item.userId}
        </foreach>
    </update>


    <select id="getReturnFees" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.ReturnFeesBean">
        SELECT
            u.id AS userId,
            agent.id AS agentId,
            IFNULL(agent.agent_return_fee_percent,0) AS agentFeePercent,
            IFNULL(agent.agent_return_service_percent,0) AS agentServicePercent,
            IFNULL(agent.agent_return_fee_money,0) AS agentFeeMoney,
            IFNULL(agent.agent_return_fee_total_money,0) AS agentFeeTotalMoney,
            IFNULL(agent.agent_return_service_money,0) AS agentServiceMoney,
            IFNULL(agent.agent_return_service_total_money,0) AS agentServiceTotalMoney,
            units.id AS unitsId,
            IFNULL(units.units_return_fee_percent,0) AS unitsFeePercent,
            IFNULL(units.units_return_service_percent,0) AS unitsServicePercent,
            IFNULL(units_return_fee_money,0) AS unitsFeeMoney,
            IFNULL(units_return_fee_total_money,0) AS unitsFeeTotalMoney,
            IFNULL(units_return_service_money,0) AS unitsServiceMoney,
            IFNULL(units_return_service_total_money,0) AS unitsServiceTotalMoney,
            center.id AS centerId,
            IFNULL(center.return_fee_percent,0) AS centerFeePercent,
            IFNULL(center.return_service_percent,0) AS centerServicePercent,
            IFNULL(return_fee_money,0) AS centerFeeMoney,
            IFNULL(return_fee_total_money,0) AS centerFeeTotalMoney,
            IFNULL(return_service_money,0) AS centerServiceMoney,
            IFNULL(return_service_total_money,0) AS centerServiceTotalMoney
        FROM
            tb_user u
        LEFT JOIN tb_ml3_agent agent ON u.agent_invite_code = agent.agent_invite_code
        LEFT JOIN tb_ml3_member_units units ON agent.units_id = units.id
        LEFT JOIN tb_ml3_operate_center center ON agent.center_id = center.id
        WHERE
            u.id = #{0}
    </select>

    <update id="updAgentReturnMoney" parameterType="java.util.Map">
        UPDATE  tb_ml3_agent
           SET  agent_return_service_money = agent_return_service_money + #{agentMoney},
                agent_return_service_total_money = agent_return_service_total_money +#{agentMoney}
          WHERE id = #{agentId}
    </update>

    <update id="updAgentReturnFeeMoney" parameterType="java.util.Map">
         UPDATE  tb_ml3_agent
           SET  agent_return_fee_money = agent_return_fee_money + #{agentMoney},
                agent_return_fee_total_money = agent_return_fee_total_money +#{agentMoney}
          WHERE id = #{agentId}
    </update>

    <update id="updUnitsReturnMoney" parameterType="java.util.Map">
        UPDATE tb_ml3_member_units
        SET units_return_service_money = units_return_service_money + #{unitsMoney},
            units_return_service_total_money = units_return_service_total_money + #{unitsMoney}
         WHERE id = #{unitsId}
    </update>

    <update id="updUnitsReturnFeeMoney" parameterType="java.util.Map">
         UPDATE tb_ml3_member_units
        SET units_return_fee_money = units_return_fee_money + #{unitsMoney},
            units_return_fee_total_money = units_return_fee_total_money + #{unitsMoney}
         WHERE id = #{unitsId}
    </update>

    <update id="updCenterReturnMoney" parameterType="java.util.Map">
        UPDATE tb_ml3_operate_center
           SET return_service_money = return_service_money + #{centerMoney},
               return_service_total_money = return_service_total_money + #{centerMoney}
          WHERE id = #{centerId}
    </update>

    <update id="updCenterReturnFeeMoney" parameterType="java.util.Map">
         UPDATE tb_ml3_operate_center
           SET return_fee_money = return_fee_money + #{centerMoney},
               return_fee_total_money = return_fee_total_money + #{centerMoney}
          WHERE id = #{centerId}
    </update>

    <insert id="addReturnFeeChange" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.ReturnFeesChange">
        INSERT INTO tb_trade_return_fee_change(
              id,
              total_fee,
              befor_money,
              after_money,
              return_fee_percent,
              type,
              center_id,
              units_id,
              agent_id,
              create_time
        )VALUES (
              #{id},
              #{totalFee},
              #{beforMoney},
              #{afterMoney},
              #{returnFeePercent},
              #{type},
              #{centerId},
              #{unitsId},
              #{agentId},
              #{createTime}
        )
    </insert>

    <select id="getSubTradeBySerialNo" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        SELECT id,
            serial_no as serialNo,
            user_id as userId,
            hold_num as holdNum,
            money,
            goods_id as goodsId,
            goods_name as goodsName,
            buy_point as buyPoint,
            old_trade_serial_no as oldTradeSerialNo,
            status,
            service_fee as serviceFee,
            fee_buy as feeBuy
        FROM tb_trade
        WHERE serial_no = #{0}
    </select>

    <select id="getSubTradeBySerialNo2" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        SELECT id,
        serial_no as serialNo,
        user_id as userId,
        hold_num as holdNum,
        money,
        goods_id as goodsId,
        goods_name as goodsName,
        buy_point as buyPoint,
        old_trade_serial_no as oldTradeSerialNo,
        status,
        service_fee as serviceFee,
        fee_buy as feeBuy
        FROM tb_trade
        WHERE serial_no = #{0} AND status = #{1}
    </select>

    <insert id="insertTakeGoods" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.TakeGoodsBean">
        INSERT INTO tb_goods_take
            (
                id,
                goods_id,
                goods_name,
                user_id,
                goods_num,
                create_time,
                status,
                address_id,
                money,
                serial_no,
                service_fee,
                buy_fee
            )
        VALUES(
                #{id},
                #{goodsId},
                #{goodsName},
                #{userId},
                #{goodsNum},
                #{createTime},
                #{status},
                #{addressId},
                #{money},
                #{serialNo},
                #{serviceFee},
                #{buyFee}
            )
    </insert>

    <update id="updateHoldTrade" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        UPDATE tb_trade
        SET money = #{money},
            service_fee = #{serviceFee},
            fee_buy = #{feeBuy},
            <if test="holdNum == 0">
                status = #{status},
                sell_point = #{sellPoint},
                sell_time = #{sellTime},
                dif_money = #{difMoney},
            </if>
            hold_num = #{holdNum}
        WHERE id = #{id}
    </update>

    <update id="cancelHangTrade" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        UPDATE tb_trade
        SET status = #{status},
            hold_num = #{holdNum},
            money = #{money},
            sell_point = #{sellPoint},
            sell_time = #{sellTime},
            dif_money = #{difMoney}
        WHERE id = #{id}
    </update>

    <update id="cancel" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        UPDATE tb_trade
        SET status = #{status},
            remark = #{remark}
        WHERE id = #{id}
    </update>

    <select id="getHangTradeList" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        SELECT id,
            serial_no as serialNo,
            user_id as userId,
            hold_num as holdNum,
            money,
            goods_id as goodsId,
            goods_name as goodsName,
            buy_point as buyPoint,
            sell_point as sellPoint,
            old_trade_serial_no as oldTradeSerialNo,
            status,
            service_fee as serviceFee,
            fee_buy as feeBuy,
            fee_sell as feeSell,
            buy_time as buyTime,
            center_id as centerId,
            units_id as unitsId,
            agent_id as agentId,
            hold_flag as holdFlag,
            hang_time as hangTime,
            parent1_id as parent1Id,
            parent2_id as parent2Id,
            parent3_id as parent3Id
        FROM tb_trade
        WHERE status = 2
        ORDER BY hang_time ASC
    </select>

    <select id="getHangList" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.HangGoodsDetail">
        select  goods_name as goodsName,
                goods_id as goodsId,
                SUM(hold_num) as totalHoldNum,
                sell_point as buyPoint
                <!-- buy_point as buyPoint -->
                <!-- sell_point as sellPoint -->
          from tb_trade
        where `status` = 2
          and goods_id = #{0}
        <!-- group by buy_point order by buy_point asc -->
        group by sell_point
        order by sell_point asc
        limit 5
    </select>

    <select id="getStatistice" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.GoodStatistics">
        SELECT
            IFNULL(sum(hold_num), 0) AS todayTotalNum,
            <!-- IFNULL(convert(sum(sell_point), decimal), 0) AS todayTotalMoney, -->
            IFNULL(CAST(sum(sell_point * hold_num) AS DECIMAL(18, 2)), 0) AS todayTotalMoney,
            IF (
                count(1) = 0,
                0,
                <!-- convert(sum(sell_point)/sum(hold_num), decimal) -->
                CAST(sum(sell_point * hold_num)/sum(hold_num) AS DECIMAL(18, 2))
            ) AS averagePrice,
            numTable.leftNum AS totalLeftNum,
            numTable.goodsName,
            numTable.goodsCode,
            firstTable.firstPrice AS firstPrice,
            priceTable.maxPrice AS maxPrice,
            priceTable.minPrice AS minPrice,
            hangTable.hangNum AS forSell
        FROM
            tb_trade,
            (
                SELECT
                    (a.totalNum - b.takeNum) AS leftNum,
                    a.goodsName,
                    a.goodsCode
                FROM
                    (
                        SELECT
                            ifnull(goods_total_num, 0) AS totalNum,
                            goods_name AS goodsName,
                            goods_code AS goodsCode
                        FROM
                            tb_sub_goods
                        WHERE
                            id = #{0}
                    ) AS a,
                    (
                        	SELECT
                       CASE WHEN (
						  SELECT
                            COUNT(1)
                        FROM
                            tb_goods_take
                        WHERE
                            goods_id = #{0}
                        AND STATUS = 1
                        )=0 THEN 0 ELSE(
						SELECT
                            ifnull(sum(goods_num), 0)
                        FROM
                            tb_goods_take
                        WHERE
                            goods_id = #{0}
                        AND STATUS = 1
												) END  AS takeNum
                    ) AS b
            ) numTable,
            (
                SELECT
                    CASE
                WHEN (
                    SELECT
                        count(1)
                    FROM
                        tb_trade
                    WHERE
                        goods_id = #{0}
                    AND STATUS = '3'
                    AND DATE_FORMAT(buy_time, '%y-%m-%d') = CURDATE()
                ) = 0 THEN
                    0
                ELSE
                    (
                        SELECT
                            ifnull(sell_point, 0)
                        FROM
                            tb_trade
                        WHERE
                            goods_id = #{0}
                        AND STATUS = '3'
                        AND DATE_FORMAT(buy_time, '%y-%m-%d') = CURDATE()
                        ORDER BY
                            buy_time ASC
                        LIMIT 1
                    )
                END AS firstPrice
            ) firstTable,
            (
                SELECT
                    IFNULL(max(sell_point), 0) AS maxPrice,
                    IFNULL(min(sell_point), 0) AS minPrice
                FROM
                    tb_trade
                WHERE
                    goods_id = #{0}
                AND STATUS = '3'
                AND DATE_FORMAT(sell_time, '%y-%m-%d') = CURDATE()
            ) priceTable,
            (
                SELECT
                    sum(hold_num) AS hangNum
                FROM
                    tb_trade
                WHERE
                    goods_id = #{0}
                AND STATUS = '2'
            ) hangTable
        WHERE
            goods_id = #{0}
        AND STATUS = '3'
        AND DATE_FORMAT(sell_time, '%y-%m-%d') = CURDATE()
    </select>

    <!-- 查询商品库存总量 商品所属人持仓+认购持仓 -->
    <select id="countTradeHoldNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
            IFNULL(SUM(hold_num), 0)
        FROM
            tb_trade
        WHERE
            goods_id = #{id}
        AND `status` = 1 OR `status` = 2
    </select>

    <select id="getHangNum" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT IFNULL(sum(hold_num), 0) FROM tb_trade WHERE goods_id = #{goodsId} AND status = #{status} AND sell_point = #{buyPoint}
    </select>

    <select id="getHangGoodsTradeList" parameterType="java.util.Map" resultType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
         SELECT id,
               serial_no as serialNo,
               user_id as userId,
               hold_num as holdNum,
               IFNULL(money, 0) as money,
               goods_id as goodsId,
               IFNULL(buy_point, 0) as buyPoint,
               IFNULL(sell_point, 0) as sellPoint,
               IFNULL(service_fee, 0) as serviceFee,
               IFNULL(fee_buy, 0) as feeBuy,
               hang_time as hangTime,
               buy_time as buyTime,
               goods_name as goodsName,
               old_trade_serial_no as oldTradeSerialNo,
               center_id as centerId,
               units_id as unitsId,
               agent_id as agentId,
               parent1_id as parent1Id,
                parent2_id as parent2Id,
                parent3_id as parent3Id
          FROM tb_trade
         WHERE goods_id = #{goodsId}
         AND status = #{status}
         AND sell_point = #{buyPoint}
         ORDER BY hang_time ASC
    </select>

    <update id="seperateHangTrade" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.SubMakeBean">
        UPDATE tb_trade
           SET hold_num = #{holdNum},
               money = #{money},
               service_fee = #{serviceFee},
               fee_buy = #{feeBuy}
         WHERE id = #{id}
    </update>

    <insert id="goodsStore" parameterType="com.rmkj.microcap.modules.chanong.sub.bean.StoreBean">
        INSERT INTO tb_goods_store
            ( id,
              user_id,
              goods_id,
              status,
              create_time
            ) VALUES
            (
              #{id},
              #{userId},
              #{goodsId},
              #{status},
              #{createTime}
            )
    </insert>

  <!--   UPDATE tb_goods_store
    SET status = #{status},
    update_time = #{updateTime}
    WHERE user_id = #{userId} AND goods_id = #{goodsId} AND status = '1'
    -->

    <update id="goodsStoreCancel" parameterType="java.util.Map">
         DELETE FROM tb_goods_store
         WHERE  user_id = #{userId} AND goods_id = #{goodsId} AND status = '1'
    </update>

    <select id="getMyGoodsStore" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.chanong.sub.bean.StoreGoodsInfo">
          SELECT
              store.create_time as storeTime,
              goods.img_load_path as imgLoadPath,
              goods.goods_name as goodsName,
              goods.goods_code as goodsCode,
              goods.id as goodsId,
              goods.status
            FROM
                tb_goods_store store left join tb_sub_goods goods on store.goods_id = goods.id
            where store.user_id = #{0} and store.status = '1'
            order by store.create_time desc
    </select>

    <select id="judgeGoodsStore"  resultType="java.lang.Integer">
        SELECT count(1) FROM tb_goods_store WHERE user_id = #{0} and goods_id = #{1}
    </select>
    
    <select id="getGoodsDetailImg" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT img_detail_load_path FROM tb_sub_goods WHERE id = #{0};
    </select>

    <select id="openWeekAndTime" resultType="com.rmkj.microcap.modules.chanong.sub.bean.OpenTime">
        SELECT open_time as openTime,
               week_day_set as weekDaySet
          FROM tb_parameter_set
         limit 1
    </select>

    <update id="updPlatServiceMoney" parameterType="java.math.BigDecimal">
        UPDATE tb_parameter_set
        SET service_fee_money = service_fee_money + #{0},
            service_fee_money_total = service_fee_money_total + #{0}
    </update>

    <update id="updPlatFeeMoney" parameterType="java.math.BigDecimal">
         UPDATE tb_parameter_set
        SET fee_money = fee_money + #{0},
            fee_money_total = fee_money_total + #{0}
    </update>

    <select id="getGoodsName" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT goods_name FROM tb_sub_goods WHERE id = #{0}
    </select>

    <update id="converUserMoney" parameterType="java.lang.String">
        UPDATE tb_user SET money = money + return_money,
                           return_money = 0
                      WHERE id = #{0}
    </update>
</mapper>


