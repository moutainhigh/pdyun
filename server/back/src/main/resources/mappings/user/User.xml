<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rmkj.microcap.modules.user.dao.IUserDao">
    <select id="queryList" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
        operateCenter.`name` AS operateCenter,
        units.`name` AS unitsName,
        agent.real_name AS agentRealName,
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        `user`.ticket as ticket,
        user.coupon_money as couponMoney,
        user.recharge_money as rechargeMoney,
        user.status as status,
        user.sub_flag as subFlag,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp
        FROM
        tb_user user
        LEFT JOIN tb_ml3_agent agent ON agent.agent_invite_code = user.agent_invite_code
        LEFT JOIN tb_ml3_member_units units ON units.id = agent.units_id
        LEFT JOIN tb_ml3_operate_center operateCenter ON operateCenter.id = units.center_id
        <include refid="queryUserColumns"></include>

        <if test="orderKey == null and orderValue ==null">
            order by user.register_time desc
        </if>
        <if test="orderKey != null and orderValue !=null">
            ORDER BY user.${orderKey} ${orderValue}
        </if>
    </select>
    <!--统计用户总余额，总充值-->
    <select id="queryUserTotal" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
            sum(user.money) AS totalMoney,
            sum(user.recharge_money) as totalRechargeMoney
        FROM tb_user user
        LEFT JOIN tb_ml3_agent agent ON agent.agent_invite_code = user.agent_invite_code
        LEFT JOIN tb_ml3_member_units units ON units.id = agent.units_id
        LEFT JOIN tb_ml3_operate_center operateCenter ON operateCenter.id = units.center_id
        <include refid="queryUserColumns"/>
    </select>
    <!--统计用户有效总交易量-->
    <select id="queryUserTotalTradeMoney" resultType="java.math.BigDecimal" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
          sum(t.money)
        FROM tb_trade t
        WHERE t.status = 1 AND t.sell_type = 1 AND t.buy_point != t.sell_point
        <!--<if test="centerId != null">-->
          <!--AND t.center_id = #{centerId}-->
        <!--</if>-->
        <!--<if test="unitsId != null">-->
          <!--AND t.units_id = #{unitsId}-->
        <!--</if>-->
        <!--<if test="agentId != null">-->
          <!--AND t.agent_id = #{agentId}-->
        <!--</if>-->
        <!--<if test="uMoneyMin != null || uMoneyMax != null || mobile != null">-->
            AND EXISTS (
            SELECT 1
            FROM tb_user user
            LEFT JOIN tb_ml3_agent agent ON agent.agent_invite_code = user.agent_invite_code
            LEFT JOIN tb_ml3_member_units units ON units.id = agent.units_id
            LEFT JOIN tb_ml3_operate_center operateCenter ON operateCenter.id = units.center_id
            <include refid="queryUserColumns"/>
            AND user.id = t.user_id
            )
        <!--</if>-->
    </select>

    <select id="querySingleUserTotalTradeMoney" resultType="java.math.BigDecimal" parameterType="string">
        SELECT
        sum(money)
        FROM tb_trade
        WHERE status = 1 AND sell_type = 1 AND buy_point != sell_point
        AND user_id = #{id}
    </select>

    <select id="findUserSelective" resultType="com.rmkj.microcap.modules.user.entity.UserBean" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
            user.id as id,
            user.open_id as openId,
            user.user_header as userHeader,
            user.chn_name as chnName,
            user.mobile as mobile,
            user.trade_password as tradePassword,
            user.money as money,
            user.recharge_money as rechargeMoney,
            user.return_money as returnMoney,
            user.status as status,
            user.register_time as registerTime,
            user.last_login_time as lastLoginTime,
            user.last_login_ip as lastLoginIp,
            user.id_card AS idCard
        FROM tb_user user
          <include refid="queryUserColumns"/>
    </select>

    <sql id="queryUserColumns">
        where user.mobile is not null
        <if test="id!=null">
            and user.id=#{id}
        </if>
        <if test="openId!=null">
            and user.open_id=#{openId}
        </if>
        <if test="userHeader!=null">
            and user.user_header=#{userHeader}
        </if>
        <if test="chnName!=null">
            and user.chn_name like CONCAT(CONCAT('%',#{chnName}),'%')
        </if>
        <if test="mobile!=null">
            and user.mobile like CONCAT(CONCAT('%', #{mobile}), '%')
        </if>
        <if test="tradePassword!=null">
            and user.trade_password=#{tradePassword}
        </if>
        <if test="money!=null">
            and user.money=#{money}
        </if>
        <if test="rechargeMoney!=null">
            and user.recharge_money=#{rechargeMoney}
        </if>
        <if test="status!=null">
            and user.status=#{status}
        </if>
        <if test="registerTime!=null">
            and user.register_time=#{registerTime}
        </if>
        <if test="lastLoginTime!=null">
            and user.last_login_time=#{lastLoginTime}
        </if>
        <if test="lastLoginIp!=null">
            and user.last_login_ip=#{lastLoginIp}
        </if>
        <if test="uMoneyMin != null">
            AND user.money &gt; #{uMoneyMin}
        </if>
        <if test="uMoneyMax != null">
            AND user.money &lt; #{uMoneyMax}
        </if>
        <if test="groupId != null">
            AND t.group_id = '0'
        </if>
        <if test="centerId != null">
          AND operateCenter.id = #{centerId}
        </if>
        <if test="unitsId != null">
          AND units.id = #{unitsId}
        </if>
        <if test="agentId != null">
          AND agent.id = #{agentId}
        </if>
    </sql>
    <select id="get" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        user.recharge_money as rechargeMoney,
        user.return_money as returnMoney,
        user.status as status,
        user.sub_flag as subFlag,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp,
        user.id_card AS idCard
        FROM
    tb_user user
        where id= #{id}
    </select>

    <insert id="insert">
        INSERT INTO tb_user
        (
        id,
        open_id,
        user_header,
        chn_name,
        mobile,
        trade_password,
        money,
        recharge_money,
        status,
        register_time,
        last_login_time,
        last_login_ip
        )
        VALUES(
        #{id},
        #{openId},
        #{userHeader},
        #{chnName},
        #{mobile},
        #{tradePassword},
        #{money},
        #{rechargeMoney},
        #{status},
        #{registerTime},
        #{lastLoginTime},
        #{lastLoginIp}
        )
    </insert>

    <update id="update">
        UPDATE
    tb_user
        <set>
            chn_name = #{chnName},
            mobile = #{mobile},
            status = #{status},
            sub_flag = #{subFlag},
        </set>
        WHERE id= #{id}
    </update>
    <update id="delete" parameterType="string">
        delete from
    tb_user
        WHERE id= #{id}
    </update>
    <select id="selectTiXianCount" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(id) FROM tb_money_record WHERE type = 1 AND user_id = #{id}
    </select>
    <select id="queryMoneyRecordList" parameterType="com.rmkj.microcap.modules.moneyrecord.entity.MoneyRecordBean" resultType="com.rmkj.microcap.modules.moneyrecord.entity.MoneyRecordBean">

        SELECT
        record.id as Id,
        record.serial_no as SerialNo,
        record.user_id as uId,
        record.money as Money,
        record.fee as Fee,
        record.type as type,
        record.third_serial_no as ThirdSerialNo,
        record.status as Status,
        record.remark as Remark,
        record.create_time as CreateTime,
        record.complete_time as CompleteTime,
        record.chn_name as chnName,
        record.bank_name as BankName,
        record.bank_account as BankAccount,
        record.failure_reason as FailureReason,
        record.channel as channel,

        users.mobile as mobile,
        users.chn_name as UName

        FROM
        tb_money_record record LEFT JOIN tb_user users ON users.id = record.user_id
        where record.user_id = #{id}
        <if test="createTimeMin!=null ">
            and record.create_time &gt; #{createTimeMin}
        </if>
        <if test="createTimeMax!=null ">
            and record.create_time &lt; #{createTimeMax}
        </if>
        ORDER BY record.create_time DESC
    </select>
    <update id="getCash" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
       UPDATE tb_user SET  money =  money - #{money} WHERE id = #{id} AND  money - #{money} >= 0
    </update>
    <update id="recharge" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        UPDATE tb_user SET  money =  money + #{money},recharge_money = recharge_money + #{money} WHERE id = #{id}
    </update>
    <update id="moneyBack" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        UPDATE tb_user SET  money =  money + #{money} WHERE id = #{id}
    </update>
    <update id="userCouponMoney" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        UPDATE tb_user SET  coupon_money =  coupon_money + #{sendMoney} WHERE id = #{id}
    </update>
    <insert id="insertUserMessage">
        INSERT INTO tb_user_message
        (
        id,
        user_id,
        title,
        content,
        read_status,
        type,
        create_time
        )
        VALUES(
        #{id},
        #{userId},
        #{title},
        #{content},
        #{readStatus},
        #{type},
        #{createTime}
        )
    </insert>
    <select id="winMoney" parameterType="java.lang.String" resultType="java.math.BigDecimal">
        select SUM(dif_money) from tb_trade where user_id = #{id} and dif_money &gt; 0
    </select>
    <select id="loseMoney" parameterType="java.lang.String" resultType="java.math.BigDecimal">
        select ABS(SUM(dif_money)) from tb_trade where user_id = #{id} and dif_money &lt; 0
    </select>
    <!--<select id="juntuanList" parameterType="com.rmkj.microcap.modules.user.entity.UserBean" resultType="com.rmkj.microcap.modules.user.entity.UserBean">-->
        <!--SELECT-->
            <!--tt.`name` AS unitsName,-->
            <!--tt.realName AS agentRealName,-->
            <!--tt.id as id,-->
            <!--tt.open_id as openId,-->
            <!--tt.user_header as userHeader,-->
            <!--tt.chn_name as chnName,-->
            <!--tt.mobile as mobile,-->
            <!--tt.trade_password as tradePassword,-->
            <!--tt.money as money,-->
            <!--tt.ticket as ticket,-->
            <!--tt.trade_count as tradeCount,-->
            <!--tt.coupon_money as couponMoney,-->
            <!--tt.recharge_money as rechargeMoney,-->
            <!--tt.status as status,-->
            <!--tt.register_time as registerTime,-->
            <!--tt.last_login_time as lastLoginTime,-->
            <!--tt.last_login_ip as lastLoginIp,-->
            <!--tt.totalMoney,-->
            <!--tt.totalTradeCount,-->
            <!--tt.totalCount,-->
            <!--tt.agent_code-->
        <!--FROM (-->
          <!--SELECT IFNULL(t1.count, 0)+IFNULL(t2.count, 0)+IFNULL(t3.count, 0) as totalCount, IFNULL(t1.money, 0)+IFNULL(t2.money, 0)+IFNULL(t3.money, 0) as totalMoney,-->
            <!--IFNULL(t4.money, 0) AS totalTradeCount, t.*, t5.agent_code, t5.realName, units.name-->
          <!--FROM tb_user t-->
            <!--LEFT JOIN (select count(*) as count, sum(recharge_money) as money, parent1_id  from tb_user WHERE mobile is not null AND parent1_id is not null group by parent1_id) t1 ON t1.parent1_id = t.id-->
            <!--LEFT JOIN (select count(*) as count, sum(recharge_money) as money, parent2_id  from tb_user WHERE mobile is not null AND parent2_id is not null group by parent2_id) t2 ON t2.parent2_id = t.id-->
            <!--LEFT JOIN (select count(*) as count, sum(recharge_money) as money, parent3_id  from tb_user WHERE mobile is not null AND parent3_id is not null group by parent3_id) t3 ON t3.parent3_id = t.id-->
            <!--LEFT JOIN (select count(*) as count, sum(money) as money, user_id from tb_trade GROUP BY user_id) t4 on t4.user_id = t.id-->
            <!--LEFT JOIN (SELECT agent_invite_code as agent_code, real_name AS realName, units_id AS unitsId from tb_ml3_agent GROUP BY agent_invite_code) t5 ON t5.agent_code = t.agent_invite_code-->
            <!--LEFT JOIN (SELECT units.id,units.`name` FROM tb_ml3_member_units units) units ON units.id = t5.unitsId-->
        <!--WHERE t.mobile is not null AND (t.parent2_id IS NOT NULL OR t.parent3_id IS NOT NULL)-->
        <!--) tt-->
        <!--where tt.mobile is not null-->
        <!--<if test="mobile!=null">-->
            <!--and tt.mobile = #{mobile}-->
        <!--</if>-->
        <!--<if test="orderKey == null and orderValue ==null">-->
            <!--order by tt.register_time desc-->
        <!--</if>-->
        <!--<if test="orderKey != null and orderValue !=null">-->
            <!--ORDER BY tt.${orderKey} ${orderValue}-->
        <!--</if>-->
    <!--</select>-->

    <select id="juntuanList" parameterType="com.rmkj.microcap.modules.user.entity.UserBean" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        `user`.ticket as ticket,
        `user`.trade_count as tradeCount,
        user.coupon_money as couponMoney,
        user.recharge_money as rechargeMoney,
        user.status as status,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp,
        (select sum(recharge_money) from tb_user user1 where `user1`.parent2_id = user.id or `user1`.parent3_id = user.id) as totalMoney,
        (select count(id) from tb_trade trade where (trade.parent2_id = user.id or trade.parent3_id  = `user`.id) and trade.dif_money !=0 and trade.sell_type = 1) as totalTradeCount,
        (select count(*) from tb_user user3 where (`user3`.parent2_id = user.id or `user3`.parent3_id = user.id) and `user3`.mobile is not null) as totalCount,
        (select real_name from tb_ml3_agent agent where agent.agent_invite_code = user.agent_invite_code) AS agentRealName,
        (select units.name from tb_ml3_member_units units, tb_ml3_agent agent where agent.agent_invite_code = `user`.agent_invite_code and agent.units_id = units.id) AS unitsName
        FROM
        tb_user user
        where  user.mobile is not null
        <if test="id!=null">
            and user.id=#{id}
        </if>
        <if test="openId!=null">
            and user.open_id=#{openId}
        </if>
        <if test="userHeader!=null">
            and user.user_header=#{userHeader}
        </if>
        <if test="chnName!=null">
            and user.chn_name like '%' #{chnName} '%'
        </if>
        <if test="mobile!=null">
            and user.mobile = #{mobile}
        </if>
        <if test="tradePassword!=null">
            and user.trade_password=#{tradePassword}
        </if>
        <if test="money!=null">
            and user.money=#{money}
        </if>
        <if test="rechargeMoney!=null">
            and user.recharge_money=#{rechargeMoney}
        </if>
        <if test="status!=null">
            and user.status=#{status}
        </if>
        <if test="registerTime!=null">
            and user.register_time=#{registerTime}
        </if>
        <if test="lastLoginTime!=null">
            and user.last_login_time=#{lastLoginTime}
        </if>
        <if test="lastLoginIp!=null">
            and user.last_login_ip=#{lastLoginIp}
        </if>
        <if test="uMoneyMin != null">
            AND user.money &gt; #{uMoneyMin}
        </if>
        <if test="uMoneyMax != null">
            AND user.money &lt; #{uMoneyMax}
        </if>
        <if test="orderKey == null and orderValue ==null">
            order by user.register_time desc
        </if>
        <if test="orderKey != null and orderValue !=null">
            ORDER BY ${orderKey} ${orderValue}
        </if>
    </select>

    <select id="juntuanListTotal" parameterType="com.rmkj.microcap.modules.user.entity.UserBean" resultType="long">
        SELECT count(*) FROM tb_user
              WHERE mobile is not NULL
        <if test="mobile!=null">
            and mobile = #{mobile}
        </if>
    </select>

    <select id="getJunTuanList" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        select
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        `user`.ticket as ticket,
        user.recharge_money as rechargeMoney,
        user.status as status,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp
        from tb_user user
        where
        (
        `user`.parent2_id = #{id}
        or `user`.parent3_id = #{id}
        )
        AND user.mobile is not null ORDER BY user.register_time
    </select>
    <insert id="insertMl3Agent">
        INSERT INTO tb_ml3_agent
        (
        id,
        user_id,
        units_id,
        account,
        mobile,
        safe_password,
        agent_invite_code,
        real_name,
        agent_header,
        money,
        total_money,
        status,
        review_status,
        create_time,
        last_login_time,
        last_login_ip,
        bank_account_name,
        bank_account,
        bank_name,
        bank_child_name,
        id_card
        )
        VALUES(
        #{id},
        #{userId},
        #{unitsId},
        #{account},
        #{mobile},
        #{safePassword},
        #{agentInviteCode},
        #{realName},
        #{agentHeader},
        #{money},
        #{totalMoney},
        #{status},
        #{reviewStatus},
        #{createTime},
        #{lastLoginTime},
        #{lastLoginIp},
        #{bankAccountName},
        #{bankAccount},
        #{bankName},
        #{bankChildName},
        #{idCard}
        )
    </insert>
    <!--<update id="updateJunTuanPwd" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">-->
        <!--update tb_user set -->
    <!--</update>-->
    <select id="paobingList" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        select
            user.id as id,
            user.open_id as openId,
            user.user_header as userHeader,
            user.chn_name as chnName,
            user.mobile as mobile,
            user.trade_password as tradePassword,
            user.money as money,
            user.ticket as ticket,
            user.trade_count as tradeCount,
            user.coupon_money as couponMoney,
            user.recharge_money as rechargeMoney,
            user.status as status,
            user.register_time as registerTime,
            user.last_login_time as lastLoginTime,
            user.last_login_ip as lastLoginIp,
            (select chn_name from tb_user user1 where user1.id = `user`.parent1_id) as juntuanChnName,
            (select mobile from tb_user user1 where user1.id = `user`.parent1_id) as juntuanMobile,
            '炮兵团' as jType
        from
        tb_user user
        where
        `user`.parent1_id is not null
        <if test="juntuanMobile!=null">
            and (select mobile from tb_user user1 where user1.id = `user`.parent1_id) = #{juntuanMobile}
        </if>
        <if test="juntuanChnName!=null">
            and (select chn_name from tb_user user1 where user1.id = `user`.parent1_id) = #{juntuanChnName}
        </if>
        <if test="orderKey == null and orderValue ==null">
            order by user.register_time desc
        </if>
        <if test="orderKey != null and orderValue !=null">
            ORDER BY ${orderKey} ${orderValue}
        </if>
    </select>
    <select id="qibingList" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        select
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        user.ticket as ticket,
        (select count(id) from tb_trade trade where trade.dif_money !=0 and trade.sell_type = 1 and trade.user_id = `user`.id) as tradeCount,
        user.coupon_money as couponMoney,
        user.recharge_money as rechargeMoney,
        user.status as status,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp,
        (select chn_name from tb_user user1 where user1.id = `user`.parent2_id) as juntuanChnName,
        (select mobile from tb_user user1 where user1.id = `user`.parent2_id) as juntuanMobile,
        '骑兵团' as jType
        from
        tb_user user
        where
        `user`.parent2_id is not null and user.mobile is not null
        <if test="juntuanMobile!=null">
            and (select mobile from tb_user user1 where user1.id = `user`.parent2_id) = #{juntuanMobile}
        </if>
        <if test="juntuanChnName!=null">
            and (select chn_name from tb_user user1 where user1.id = `user`.parent2_id) = #{juntuanChnName}
        </if>
        <if test="orderKey == null and orderValue ==null">
            order by user.register_time desc
        </if>
        <if test="orderKey != null and orderValue !=null">
            ORDER BY ${orderKey} ${orderValue}
        </if>
    </select>
    <select id="bubingList" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        select
        user.id as id,
        user.open_id as openId,
        user.user_header as userHeader,
        user.chn_name as chnName,
        user.mobile as mobile,
        user.trade_password as tradePassword,
        user.money as money,
        user.ticket as ticket,
        (select count(id) from tb_trade trade where trade.dif_money !=0 and trade.sell_type = 1 and trade.user_id = `user`.id) as tradeCount,
        user.coupon_money as couponMoney,
        user.recharge_money as rechargeMoney,
        user.status as status,
        user.register_time as registerTime,
        user.last_login_time as lastLoginTime,
        user.last_login_ip as lastLoginIp,
        (select chn_name from tb_user user1 where user1.id = `user`.parent3_id) as juntuanChnName,
        (select mobile from tb_user user1 where user1.id = `user`.parent3_id) as juntuanMobile,
        '步兵团' as jType
        from
        tb_user user
        where
        `user`.parent3_id is not null and user.mobile is not null
        <if test="juntuanMobile!=null">
            and (select mobile from tb_user user1 where user1.id = `user`.parent3_id) = #{juntuanMobile}
        </if>
        <if test="juntuanChnName!=null">
            and (select chn_name from tb_user user1 where user1.id = `user`.parent3_id) = #{juntuanChnName}
        </if>
        <if test="orderKey == null and orderValue ==null">
            order by user.register_time desc
        </if>
        <if test="orderKey != null and orderValue !=null">
            ORDER BY ${orderKey} ${orderValue}
        </if>
    </select>

    <insert id="addControl" parameterType="string">
        INSERT INTO tb_control_group_user (user_id, group_id, create_time) VALUES (#{userId}, '0', now())
    </insert>

    <delete id="delControl" parameterType="string">
        DELETE FROM tb_control_group_user WHERE user_id = #{userId} AND group_id = '0'
    </delete>
    <update id="updatePwd" parameterType="com.rmkj.microcap.common.modules.sys.bean.SysUserBean">
        update sys_user set password = #{password} where id = #{id}
    </update>

    <select id="findUserById" parameterType="string" resultType="com.rmkj.microcap.modules.user.entity.User">
        SELECT
        user.id AS id,
        user.auto_id AS autoId,
        user.open_id AS openId,
        user.wechat_public_id AS wechatPublicId,
        user.user_header AS userHeader,
        user.chn_name AS chnName,
        user.mobile AS mobile,
        user.trade_password AS tradePassword,
        user.money AS money,
        user.recharge_money AS rechargeMoney,
        user.trade_count AS tradeCount,
        user.out_money AS outMoney,
        user.coupon_money AS couponMoney,
        user.agent_invite_code AS agentInviteCode,
        user.status AS status,
        user.register_time AS registerTime,
        user.last_login_time AS lastLoginTime,
        user.last_login_ip AS lastLoginIp,
        user.parent1_id AS parent1Id,
        user.parent2_id AS parent2Id,
        user.parent3_id AS parent3Id,
        user.return_money AS returnMoney,
        user.return_money_total AS returnMoneyTotal,
        user.ticket_wechat_public_id AS ticketWechatPublicId,
        user.ticket AS ticket,
        user.ticket_expire_time AS ticketExpireTime,
        user.id_card AS idCard,
        agent.id as agentId,
        agent.units_id as unitsId,
        agent.center_id as centerId
        FROM tb_user user
            LEFT JOIN tb_ml3_agent agent ON agent.agent_invite_code = user.agent_invite_code
        WHERE user.id = #{0}
    </select>

    <!-- 平移客户 -->
    <update id="updateUserAgentInviteCode" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
      UPDATE tb_user SET agent_invite_code = #{agentInviteCode} WHERE id = #{id}
    </update>
    <!-- 返还客户佣金 -->
    <update id="userReturnMoney" parameterType="com.rmkj.microcap.modules.user.entity.UserBean">
        UPDATE tb_user SET  return_money =  return_money + #{returnMoney} WHERE id = #{id}
    </update>

    <update id="subMoney" parameterType="com.rmkj.microcap.modules.user.entity.SubMoney">
        UPDATE tb_user SET money = money - #{money} WHERE id = #{userId}
    </update>

    <select id="getSubGoodsList" resultType="com.rmkj.microcap.modules.subGoods.entity.SubGoods">
        SELECT
            id,
            img_path as imgPath,
            goods_name as goodsName,
            goods_total_num as goodsTotalNum,
            goods_left_num as goodsLeftNum,
            sub_scale as subScale,
            goods_sub_price as goodsSubPrice,
            goods_cost as goodsCost,
            sub_days as subDays
         FROM tb_sub_goods
           WHERE  status = '1'

    </select>

    <!-- 根据手机号查询客户 -->
    <select id="queryUserByMobile" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
            id,
            mobile
        FROM tb_user WHERE mobile = #{mobile}
    </select>

    <!-- 根据客户id查询上级代理  代理商，会员单位，市场管理部 -->
    <select id="queryUserLevelById" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
            users.id AS id,
            users.mobile AS mobile,
            agent.id AS agentId,
            units.id AS unitsId,
            center.id AS centerId
        FROM
            tb_user users LEFT JOIN tb_ml3_agent agent ON agent.agent_invite_code = users.agent_invite_code
            LEFT JOIN tb_ml3_member_units units ON units.id = agent.units_id
            LEFT JOIN tb_ml3_operate_center center ON center.id = units.center_id
        WHERE users.id = #{id}
    </select>

    <select id="getGoodsList" resultType="com.rmkj.microcap.modules.subGoods.entity.SubGoods">
        SELECT id,
               goods_name as goodsName,
               goods_code as goodsCode,
               status
          FROM tb_sub_goods
         WHERE status in ('1','2')
         ORDER BY create_time DESC
    </select>

    <select id="getUserByMobile" parameterType="java.lang.String" resultType="com.rmkj.microcap.modules.user.entity.UserBean">
        SELECT
          user.id AS id,
          user.open_id AS openId,
          user.user_header AS userHeader,
          user.chn_name AS chnName,
          user.mobile AS mobile,
          user.trade_password AS tradePassword,
          user.money AS money,
          user.recharge_money AS rechargeMoney,
          user.trade_count AS tradeCount,
          user.out_money AS outMoney,
          user.coupon_money AS couponMoney,
          user.agent_invite_code AS agentInviteCode,
          user.status AS status,
          user.register_time AS registerTime,
          user.last_login_time AS lastLoginTime,
          user.last_login_ip AS lastLoginIp,
          user.parent1_id AS parent1Id,
          user.parent2_id AS parent2Id,
          user.parent3_id AS parent3Id,
          user.return_money AS returnMoney,
          user.return_money_total AS returnMoneyTotal,
          user.ticket AS ticket,
          user.id_card AS idCard,
          user.return2_ratio AS return2Ratio,
          user.return3_ratio AS return3Ratio,
          user.sub_flag as subFlag,
          user.integral_neg as integralNeg,
          user.integral_pos as integralPos,
          user.integral_unpos as integralUnpos,
          agent.id as agentId,
          agent.units_id as unitsId,
          agent.center_id as centerId
        FROM tb_user user left JOIN tb_ml3_agent agent on user.agent_invite_code = agent.agent_invite_code
        WHERE user.mobile = #{mobile}
    </select>
</mapper>