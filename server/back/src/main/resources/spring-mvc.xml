<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动扫描并注册bean -->
    <!--在Spring-MVC.xml中只对@Controller进行扫描就可，作为一个控制器，其他的事情不做。-->
    <!--如果不指定具体controller包名，就需要增加use-default-filters="false"配置，否则事务失效-->
    <context:component-scan base-package="com.rmkj.microcap"
                            use-default-filters="false"
                            name-generator="com.rmkj.microcap.common.handler.SpringBeanNameGenerator">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
    <bean id="jackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
        <property name="prettyPrint" value="false"/>
        <property name="objectMapper">
            <bean class="com.rmkj.microcap.common.utils.JsonMapper"></bean>
        </property>
    </bean>
    <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8"/>
    </bean>
    <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <ref bean="stringHttpMessageConverter"></ref>
            <ref bean="jackson2HttpMessageConverter"></ref>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

    <!-- 定义视图文件解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/modules"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/"/>
    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一	位的先执行。-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="com.rmkj.microcap.common.interceptor.ContextInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.rmkj.microcap.common.interceptor.LogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- 文件上传相关 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--one of the properties available;the maximum upload size in bytes 100M -->
        <property name="maxUploadSize" value="10485760" />
    </bean>
    <!-- 全局异常处理 -->
    <bean id="exceptionHandler" class="com.rmkj.microcap.common.handler.AppExceptionHandler">
        <property name="defaultErrorView" value="/error/404"/><!-- 错误页面 -->
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter"></ref>
                <ref bean="jackson2HttpMessageConverter"></ref>
            </list>
        </property>
    </bean>
    <!-- shiro为集成springMvc 拦截异常-->
    <bean   class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings"><props>
            <!-- 这里你可以根据需要定义N多个错误异常转发 -->
            <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/login</prop>
            <prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/login</prop>
        </props>
        </property>
    </bean>
    <!--开启aop注解-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>
